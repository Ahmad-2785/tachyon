load("//bazel:tachyon.bzl", "if_polygon_zkevm_backend")
load("//bazel:tachyon_cc.bzl", "tachyon_cc_library")
load("//tachyon/math/elliptic_curves/short_weierstrass/generator:build_defs.bzl", "generate_ec_points")
load("//tachyon/math/finite_fields/generator:build_defs.bzl", "generate_prime_fields")

package(default_visibility = ["//visibility:public"])

# Parameters are from https://zips.z.cash/protocol/protocol.pdf#page=97 and https://github.com/arkworks-rs/curves/tree/master/bn254/src/fields
# Hex: 0x30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47
FQ_MODULUS = "21888242871839275222246405745257275088696311157297823662689037894645226208583"

FQ_SUBGROUP_GENERATOR = "3"

# Hex: 0x30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001
FR_MODULUS = "21888242871839275222246405745257275088548364400416034343698204186575808495617"

FR_SUBGROUP_GENERATOR = "5"

FR_SMALL_SUBGROUP_BASE = "3"

FR_SMALL_SUBGROUP_ADICITY = "2"

generate_prime_fields(
    name = "fq",
    class_name = "Fq",
    hdr_include_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#include "tachyon/math/elliptic_curves/bn/bn254/prime_field_fq.h"
#include "tachyon/build/build_config.h"
#else
#include "tachyon/math/finite_fields/prime_field.h"
#endif  // defined(TACHYON_POLYGON_ZKEVM_BACKEND)""",
    modulus = FQ_MODULUS,
    namespace = "tachyon::math::bn254",
    special_prime_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#if ARCH_CPU_X86_64
  constexpr static bool kIsSpecialPrime = true;
  constexpr static bool kIsBn254Fq = true;
#else
  #error Polygon bn254 backend is only supported on x86_64 platform.
#endif
#else
  constexpr static bool kIsSpecialPrime = false;
#endif""",
    subgroup_generator = FQ_SUBGROUP_GENERATOR,
    deps = if_polygon_zkevm_backend([
        ":prime_field_fq",
        "//tachyon/build:build_config",
    ]),
)

generate_prime_fields(
    name = "fr",
    class_name = "Fr",
    hdr_include_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#include "tachyon/math/elliptic_curves/bn/bn254/prime_field_fr.h"
#include "tachyon/build/build_config.h"
#else
#include "tachyon/math/finite_fields/prime_field.h"
#endif  // defined(TACHYON_POLYGON_ZKEVM_BACKEND)""",
    modulus = FR_MODULUS,
    namespace = "tachyon::math::bn254",
    small_subgroup_adicity = FR_SMALL_SUBGROUP_ADICITY,
    small_subgroup_base = FR_SMALL_SUBGROUP_BASE,
    special_prime_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#if ARCH_CPU_X86_64
  constexpr static bool kIsSpecialPrime = true;
  constexpr static bool kIsBn254Fr = true;
#else
  #error Polygon bn254 backend is only supported on x86_64 platform.
#endif
#else
  constexpr static bool kIsSpecialPrime = false;
#endif""",
    subgroup_generator = FR_SUBGROUP_GENERATOR,
    deps = if_polygon_zkevm_backend([
        ":prime_field_fr",
        "//tachyon/build:build_config",
    ]),
)

tachyon_cc_library(
    name = "fq_fail",
    srcs = if_polygon_zkevm_backend(["fq_fail.cc"]),
    hdrs = ["fq_fail.h"],
    deps = ["//tachyon/base:logging"],
)

tachyon_cc_library(
    name = "prime_field_fq",
    hdrs = ["prime_field_fq.h"],
    defines = ["TACHYON_POLYGON_ZKEVM_BACKEND"],
    deps = [
        "//tachyon/math/base/gmp:gmp_util",
        "//tachyon/math/finite_fields:prime_field_base",
        "//tachyon/math/finite_fields:prime_field_forward",
    ] + if_polygon_zkevm_backend([
        ":fq_fail",
        "@polygon_zkevm_zkevm_prover//:fq",
    ]),
)

tachyon_cc_library(
    name = "fr_fail",
    srcs = if_polygon_zkevm_backend(["fr_fail.cc"]),
    hdrs = ["fr_fail.h"],
    deps = ["//tachyon/base:logging"],
)

tachyon_cc_library(
    name = "prime_field_fr",
    hdrs = ["prime_field_fr.h"],
    defines = ["TACHYON_POLYGON_ZKEVM_BACKEND"],
    deps = [
        "//tachyon/math/base/gmp:gmp_util",
        "//tachyon/math/finite_fields:prime_field_base",
        "//tachyon/math/finite_fields:prime_field_forward",
    ] + if_polygon_zkevm_backend([
        ":fr_fail",
        "@polygon_zkevm_zkevm_prover//:fr",
    ]),
)

generate_ec_points(
    name = "g1",
    a = "0",
    b = "3",
    class_name = "G1",
    # Hex: 0x30644e72e131a0295e6dd9e7e0acccb0c28f069fbb966e3de4bd44e5607cfd48
    endomorphism_coefficient = "21888242871839275220042445260109153167277707414472061641714758635765020556616",
    fq_modulus = FQ_MODULUS,
    fr_modulus = FR_MODULUS,
    glv_coeffs = [
        # Hex: 0x6f4d8248eeb859fc8211bbeb7d4f1128
        "147946756881789319000765030803803410728",
        # Hex: 0x89d3256894d213e3
        "9931322734385697763",
        "-9931322734385697763",
        # Hex: 0x6f4d8248eeb859fd0be4e1541221250b
        "147946756881789319010696353538189108491",
    ],
    # Hex: 0x30644e72e131a029048b6e193fd84104cc37a73fec2bc5e9b8ca0b2d36636f23
    lambda_ = "21888242871839275217838484774961031246154997185409878258781734729429964517155",
    namespace = "tachyon::math::bn254",
    x = "1",
    y = "2",
)
