load("//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_unittest")

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "blinder",
    hdrs = ["blinder.h"],
    deps = [":random_field_generator"],
)

tachyon_cc_library(
    name = "random_field_generator",
    hdrs = ["random_field_generator.h"],
)

tachyon_cc_library(
    name = "polynomial_pointer",
    hdrs = ["polynomial_pointer.h"],
)

tachyon_cc_library(
    name = "prover_query",
    hdrs = ["prover_query.h"],
    deps = [":polynomial_pointer"],
)

tachyon_cc_library(
    name = "value",
    hdrs = ["value.h"],
    deps = ["//tachyon/math/base:rational_field"],
)

tachyon_cc_library(
    name = "verifier_query",
    hdrs = ["verifier_query.h"],
)

tachyon_cc_unittest(
    name = "base_unittests",
    srcs = [
        "blinder_unittest.cc",
        "polynomial_pointer_unittest.cc",
        "value_unittest.cc",
    ],
    deps = [
        ":blinder",
        ":polynomial_pointer",
        ":value",
        "//tachyon/base:random",
        "//tachyon/base/containers:container_util",
        "//tachyon/crypto/commitments/kzg:kzg_commitment_scheme",
        "//tachyon/math/elliptic_curves/bn/bn254:g1",
        "//tachyon/math/elliptic_curves/bn/bn254:g2",
        "//tachyon/math/finite_fields/test:gf7",
    ],
)
