load("//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_unittest")

package(default_visibility = ["//visibility:public"])

tachyon_cc_library(
    name = "compress_expression",
    hdrs = ["compress_expression.h"],
    deps = ["//tachyon/zk/plonk/circuit/expressions/evaluator:simple_evaluator"],
)

tachyon_cc_library(
    name = "lookup_argument",
    hdrs = ["lookup_argument.h"],
    deps = ["//tachyon/zk/plonk/circuit/expressions:expression"],
)

tachyon_cc_library(
    name = "lookup_argument_stringifier",
    hdrs = ["lookup_argument_stringifier.h"],
    deps = [
        ":lookup_argument",
        "//tachyon/base/strings:rust_stringifier",
        "//tachyon/zk/plonk/circuit/expressions:expression_stringifier",
    ],
)

tachyon_cc_library(
    name = "lookup_committed",
    hdrs = ["lookup_committed.h"],
    deps = ["//tachyon/zk/base:blinded_polynomial"],
)

tachyon_cc_library(
    name = "lookup_evaluated",
    hdrs = ["lookup_evaluated.h"],
    deps = ["//tachyon/zk/base:blinded_polynomial"],
)

tachyon_cc_library(
    name = "lookup_permuted",
    hdrs = ["lookup_permuted.h"],
    deps = [
        "//tachyon/zk/base:blinded_polynomial",
        "//tachyon/zk/base:evals_pair",
    ],
)

tachyon_cc_library(
    name = "lookup_argument_runner",
    hdrs = [
        "lookup_argument_runner.h",
        "lookup_argument_runner_impl.h",
    ],
    deps = [
        ":compress_expression",
        ":lookup_argument",
        ":lookup_committed",
        ":lookup_evaluated",
        ":lookup_permuted",
        "//tachyon/zk/base:prover",
        "//tachyon/zk/base:prover_query",
        "//tachyon/zk/plonk/circuit:rotation",
        "//tachyon/zk/plonk/circuit/expressions/evaluator:simple_evaluator",
        "//tachyon/zk/plonk/permutation:grand_product_argument",
    ],
)

tachyon_cc_library(
    name = "permute_expression_pair",
    hdrs = ["permute_expression_pair.h"],
    deps = [
        "//tachyon/base/containers:container_util",
        "//tachyon/zk/base:evals_pair",
        "//tachyon/zk/base:prover",
        "//tachyon/zk/plonk:error",
        "@com_google_absl//absl/container:btree",
    ],
)

tachyon_cc_unittest(
    name = "lookup_argument_unittests",
    srcs = [
        "compress_expression_unittest.cc",
        "lookup_argument_runner_unittest.cc",
        "permute_expression_pair_unittest.cc",
    ],
    deps = [
        ":compress_expression",
        ":lookup_argument_runner",
        ":permute_expression_pair",
        "//tachyon/base:random",
        "//tachyon/zk/plonk/circuit/expressions:expression_factory",
        "//tachyon/zk/plonk/lookup/test:compress_expression_test_setting",
    ],
)
