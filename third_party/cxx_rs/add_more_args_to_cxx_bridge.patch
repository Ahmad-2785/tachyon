diff --git a/tools/bazel/rust_cxx_bridge.bzl b/tools/bazel/rust_cxx_bridge.bzl
index c7d07e8a..e5b699ac 100644
--- a/tools/bazel/rust_cxx_bridge.bzl
+++ b/tools/bazel/rust_cxx_bridge.bzl
@@ -2,48 +2,61 @@
 load("@bazel_skylib//rules:run_binary.bzl", "run_binary")
 load("@rules_cc//cc:defs.bzl", "cc_library")
 
-def rust_cxx_bridge(name, src, deps = []):
+def rust_cxx_bridge(name, src, args = [], deps = [], out_dir = None):
     """A macro defining a cxx bridge library
 
     Args:
         name (string): The name of the new target
         src (string): The rust source file to generate a bridge for
+        args (list, optional): A list of arguments for the code generator. Defaults to [].
         deps (list, optional): A list of dependencies for the underlying cc_library. Defaults to [].
+        out_dir (string, optional): A dirname where outputs generated by the code generator are located. Defaults to None.
     """
+
+    if out_dir == None:
+        header = "%s.h" % src
+        source = "%s.cc" % src
+        includes = []
+    else:
+        header = "%s/%s.h" % (out_dir, src)
+        source = "%s/%s.cc" % (out_dir, src)
+        includes = ["."]
+
     native.alias(
         name = "%s/header" % name,
-        actual = src + ".h",
+        actual = header
     )
 
     native.alias(
         name = "%s/source" % name,
-        actual = src + ".cc",
+        actual = source
     )
 
     run_binary(
         name = "%s/generated" % name,
         srcs = [src],
         outs = [
-            src + ".h",
-            src + ".cc",
+            header,
+            source,
         ],
         args = [
             "$(location %s)" % src,
             "-o",
-            "$(location %s.h)" % src,
+            "$(location %s)" % header,
             "-o",
-            "$(location %s.cc)" % src,
-        ],
+            "$(location %s)" % source,
+        ] + args,
         tool = "@cxx.rs//:codegen",
     )
 
     cc_library(
         name = name,
-        srcs = [src + ".cc"],
+        srcs = [source],
         deps = deps + [":%s/include" % name],
     )
 
     cc_library(
         name = "%s/include" % name,
-        hdrs = [src + ".h"],
+        hdrs = [header],
+        includes = includes,
     )
